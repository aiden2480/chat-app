{% extends "_base.jinja" %}
{% block title %}Home{% endblock title %}

{% block head %}
    {# Google verification #}
    <meta name="google-site-verification" content="t64Qjhb3F3wGbbI2WySfx0JshVNrYMRhXabZh0lZfDE"/>
    
    <script>
        // Handle notifications
        var check_notification_status = function () {
            document.getElementById("notification-status").innerText = Notification.permission;
            var description = document.getElementById("notification-description");
            
            if (Notification.permission == "granted") {description.innerText = "You will receive notifications in chat when a message is sent and you do not have focus on the window."};
            if (Notification.permission == "denied") {description.innerText = "You will not receive any kind of chat notifications.\nYou will have to manually enable this in your browser settings."};
            if (Notification.permission == "default") {description.innerText = "You have not yet accepted notifications and so will not receive any until you do."};

            var l = Notification.permission;
            if (Notification.permission == "default") {
                var button = document.createElement("button");
                button.innerHTML = "Request notifications";
                button.onclick = function(){Notification.requestPermission().then(function(r) {
                    if (r != l) {window.location.reload()};
                    });
                };
                document.body.appendChild(button);
            };
        };
    </script>
    
    <script type="module">
        // Stoof for installing as a PWA
        let deferredPrompt;
        const pwadiv = document.getElementById("pwa-install-div");
        const addBtn = document.getElementById("pwa-install-button");
        pwadiv.style.display = "none";

        window.addEventListener("beforeinstallprompt", (e) => {
            // Prevent Chrome 67 and earlier from automatically showing the prompt
            //e.preventDefault();
            // Stash the event so it can be triggered later.
            deferredPrompt = e;
            // Update UI to notify the user they can add to home screen
            pwadiv.style.display = "block";

            addBtn.addEventListener("click", (e) => {
                // Show the prompt
                deferredPrompt.prompt();
                // Wait for the user to respond to the prompt
                deferredPrompt.userChoice.then((choiceResult) => {
                    if (choiceResult.outcome === "accepted") {
                        console.log("[PWA] User accepted the A2HS prompt");
                        // hide our user interface that shows our A2HS button
                        pwadiv.style.display = "none"
                    } else {
                        console.log("[PWA] User dismissed the A2HS prompt");
                    }
                    deferredPrompt = null;
                });
            });
        });
    </script>
{% endblock head %}

{% block body %}
    <h1 style="border-bottom: 0px;">Sleuth chat app</h1>
    <p style="border-top: 0px;">Use the navbar <a href="/login" style="font-weight: 750">login</a> button in the top right and then the <a href="/chat/" style="font-weight: 750">join chat</a> button to join the chat.</p>

    <h2>Notifications</h2>
    <p>
        <span id="notification-status" style="color: orange">Uh oh</span>
         - 
        <span id="notification-description">If you can see this message, your notification status could not be retrieved ðŸ¤” Either you don't have JavaScript enabled or you're on a mobile browser ðŸ˜¥</span>
        <script>check_notification_status()</script>
    </p>

    <div id="pwa-install-div">
        <h2>Application</h2>
        <p>Use the following button to install this website as an app:</p>
        <button id="pwa-install-button">Install</button>
    </div>

    <h2>Username list</h2>
    <p>A list of users so you know who everyone is in chat</p>
    <table>
        <tr>
            <th>Username</th>
            <th>Name</th>
        </tr>

        {% for user in app.user_conversion.items() %}
            <tr>
                <td>{{ user[0] }}</td>
                <td>{{ user[1] }}</td>
            </tr>
        {% endfor %}
    </table>
{% endblock body %}
